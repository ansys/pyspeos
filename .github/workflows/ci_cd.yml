# check spelling, codestyle
name: GitHub CI

# run only on main branch.  This avoids duplicated actions on PRs
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.9'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:


  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip flit tox
      - name: Test with tox
        run: tox -e style

  docs-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Running Vale
        uses: errata-ai/vale-action@reviewdog
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: doc
          reporter: github-pr-check
          level: error
          filter_mode: nofilter
          fail_on_error: true
          vale_flags: "--config=doc/.vale.ini"

  tests:
    name: Build and testing
    runs-on: ubuntu-latest
    needs: [style,docs]
  
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip flit
          python -m pip install -r requirements/requirements_build.txt

      - name: Build wheel and sdist
        run: |
          flit build
          python -m twine check dist/*

      - name: Install library
        run: pip install .

      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/pyansys/pyoptics
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Unit testing
        run: |
          pip install -r requirements/requirements_test.txt
          docker-compose up -d
          cd tests  # so we're testing the install, not local
          pytest -vx
          docker kill pyoptics_speos-rpc 
          docker rm pyoptics_speos-rpc

      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: ansys-pyoptics-wheel
          path: dist/
          retention-days: 7

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: [docs-style]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install OS packages
        run: |
          sudo apt update
          sudo apt install zip pandoc libgl1-mesa-glx xvfb texlive-latex-extra latexmk

      - name: Install library
        run: pip install .

      - name: Build HTML
        run: |
          pip install -r requirements/requirements_docs.txt
          make -C doc html SPHINXOPTS="-W"

      - name: Generate the PDF documentation
        run: |
          make -C doc pdf

      - name: Upload HTML documentation
        uses: actions/upload-artifact@v3
        with:
          name: HTML-Documentation
          path: doc/build/html
          retention-days: 7

      - name: Upload PDF Documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation-pdf
          path: doc/build/latex/*.pdf
          retention-days: 7

  Release:
    if: contains(github.ref, 'refs/tags')
    needs: [tests, style, docs]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: ansys-pyoptics-wheel

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-pdf

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-html
          path: ~/html

      # list current directory
      - name: List directory structure
        run: ls -R

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          BRANCH: gh-pages
          FOLDER: ~/html
          CLEAN: true

      # note how we use the PyPI tokens
      - name: Upload to Azure PyPi (disabled)
        run: |
          pip install twine
          # twine upload --skip-existing ./**/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.zip
            ./**/*.pdf
