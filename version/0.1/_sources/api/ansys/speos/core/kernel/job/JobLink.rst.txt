





:class:`JobLink`
================

.. py:class:: ansys.speos.core.kernel.job.JobLink(db, key)

   Bases: :py:obj:`ansys.speos.core.kernel.crud.CrudItem`


   
   Link object for job in database.


   :Parameters:

       **db** : :obj:`ansys.speos.core.kernel.job.JobStub`
           Database to link to.

       **key** : :class:`python:str`
           Key of the job in the database.














   ..
       !! processed by numpydoc !!



.. py:currentmodule:: JobLink

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~get`
            - Get the datamodel from database.
          * - :py:attr:`~set`
            - Change datamodel in database.
          * - :py:attr:`~delete`
            - Remove datamodel from database.
          * - :py:attr:`~get_state`
            - Retrieve job state.
          * - :py:attr:`~start`
            - Start the job.
          * - :py:attr:`~stop`
            - Stop the job.
          * - :py:attr:`~get_error`
            - Retrieve job error.
          * - :py:attr:`~get_results`
            - Retrieve job results.
          * - :py:attr:`~get_progress_status`
            - Retrieve job progress.
          * - :py:attr:`~get_ray_paths`
            - Retrieve ray paths.





   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__str__`
            - Return the string representation of the Job.




Import detail
-------------

.. code-block:: python

    from ansys.speos.core.kernel.job import JobLink



Method detail
-------------

.. py:method:: __str__()

   
   Return the string representation of the Job.
















   ..
       !! processed by numpydoc !!

.. py:method:: get()

   
   Get the datamodel from database.





   :Returns:

       :obj:`job.Job`
           Job datamodel.











   ..
       !! processed by numpydoc !!

.. py:method:: set(data)

   
   Change datamodel in database.


   :Parameters:

       **data** : :obj:`job.Job`
           New Job datamodel.














   ..
       !! processed by numpydoc !!

.. py:method:: delete()

   
   Remove datamodel from database.
















   ..
       !! processed by numpydoc !!

.. py:method:: get_state()

   
   Retrieve job state.





   :Returns:

       :obj:`ansys.api.speos.job.v2.job_pb2.GetState_Response`
           State of the job.











   ..
       !! processed by numpydoc !!

.. py:method:: start()

   
   Start the job.
















   ..
       !! processed by numpydoc !!

.. py:method:: stop()

   
   Stop the job.
















   ..
       !! processed by numpydoc !!

.. py:method:: get_error()

   
   Retrieve job error.





   :Returns:

       :obj:`ansys.api.speos.job.v2.job_pb2.GetError_Response`
           Error of the job.











   ..
       !! processed by numpydoc !!

.. py:method:: get_results()

   
   Retrieve job results.





   :Returns:

       :obj:`ansys.api.speos.job.v2.job_pb2.GetResults_Response`
           Results of the job.











   ..
       !! processed by numpydoc !!

.. py:method:: get_progress_status()

   
   Retrieve job progress.





   :Returns:

       :obj:`ansys.api.speos.job.v2.job_pb2.GetProgressStatus_Response`
           Progress status of the job.











   ..
       !! processed by numpydoc !!

.. py:method:: get_ray_paths()

   
   Retrieve ray paths.
   Available for interactive simulation.





   :Returns:

       :obj:`Iterator`\[:obj:`ansys.api.speos.results.v1.ray_path_pb2.RayPath`]
           Ray paths generated by the interactive simulation.











   ..
       !! processed by numpydoc !!




