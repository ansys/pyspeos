





:class:`Sensor3DIrradiance`
===========================

.. toctree::
   :hidden:

    Radiometric</api/ansys/speos/core/sensor/Sensor3DIrradiance.Radiometric>
    Photometric</api/ansys/speos/core/sensor/Sensor3DIrradiance.Photometric>
    Measures</api/ansys/speos/core/sensor/Sensor3DIrradiance.Measures>
    Colorimetric</api/ansys/speos/core/sensor/Sensor3DIrradiance.Colorimetric>


.. py:class:: ansys.speos.core.sensor.Sensor3DIrradiance(project, name, description = '', metadata = None, sensor_instance = None, default_values = True)

   Bases: :py:obj:`BaseSensor`


   
   Sensor feature: 3D Irradiance.

   By default, regarding inherent characteristics, a 3d irradiance sensor of type photometric and
   illuminance type planar is chosen, Reflection, Transmission, and Absorption measurements
   are activated. By default, regarding properties, no layer separation and no ray file
   generation are chosen.

   :Parameters:

       **project** : :obj:`ansys.speos.core.project.Project`
           Project that will own the feature.

       **name** : :class:`python:str`
           Name of the feature.

       **description** : :class:`python:str`
           Description of the feature.
           By default, ``""``.

       **metadata** : :obj:`Optional`\[:obj:`Mapping`\[:class:`python:str`, :class:`python:str`]]
           Metadata of the feature.
           By default, ``{}``.

       **sensor_instance** : :obj:`ansys.api.speos.scene.v2.scene_pb2.Scene.SensorInstance`, :obj:`optional`
           Sensor instance to provide if the feature does not has to be created from scratch
           By default, ``None``, means that the feature is created from scratch by default.

       **default_values** : :ref:`bool <python:bltin-boolean-values>`
           Uses default values when True.
           By default, ``True``.














   ..
       !! processed by numpydoc !!


.. py:currentmodule:: Sensor3DIrradiance

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~set_type_photometric`
            - Set type photometric.
          * - :py:attr:`~set_type_radiometric`
            - Set type radiometric.
          * - :py:attr:`~set_type_colorimetric`
            - Set type colorimetric.
          * - :py:attr:`~set_ray_file_type_none`
            - Set no ray file generation.
          * - :py:attr:`~set_ray_file_type_classic`
            - Set ray file generation without polarization data.
          * - :py:attr:`~set_ray_file_type_polarization`
            - Set ray file generation with the polarization data for each ray.
          * - :py:attr:`~set_ray_file_type_tm25`
            - Set ray file generation: a .tm25ray file with polarization data for each ray.
          * - :py:attr:`~set_ray_file_type_tm25_no_polarization`
            - Set ray file generation: a .tm25ray file without polarization data.
          * - :py:attr:`~set_layer_type_none`
            - Define layer separation type as None.
          * - :py:attr:`~set_layer_type_source`
            - Define layer separation as by source.
          * - :py:attr:`~set_geometries`
            - Select geometry faces to be defined with 3D irradiance sensor.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~visual_data`
            - Property containing 3d irradiance sensor visualization data.







Import detail
-------------

.. code-block:: python

    from ansys.speos.core.sensor import Sensor3DIrradiance

Property detail
---------------

.. py:property:: visual_data
   :type: ansys.speos.core.generic.visualization_methods._VisualData


   
   Property containing 3d irradiance sensor visualization data.





   :Returns:

       :obj:`_VisualData`
           Instance of VisualData Class for pyvista.PolyData of feature faces, coordinate_systems.











   ..
       !! processed by numpydoc !!




Method detail
-------------

.. py:method:: set_type_photometric()

   
   Set type photometric.

   The sensor considers the visible spectrum and gets the results in lm/m2 or lx.




   :Returns:

       :obj:`ansys.speos.core.sensor.Sensor3DIrradiance`
           3D Irradiance sensor.











   ..
       !! processed by numpydoc !!

.. py:method:: set_type_radiometric()

   
   Set type radiometric.

   The sensor considers the entire spectrum and gets the results in W/m2.




   :Returns:

       :obj:`ansys.speos.core.sensor.Sensor3DIrradiance`
           3D Irradiance sensor











   ..
       !! processed by numpydoc !!

.. py:method:: set_type_colorimetric()

   
   Set type colorimetric.

   The sensor will generate color results without any spectral data or layer separation
   in lx or W//m2.




   :Returns:

       :obj:`ansys.speos.core.sensor.Sensor3DIrradiance.Colorimetric`
           Colorimetric type.











   ..
       !! processed by numpydoc !!

.. py:method:: set_ray_file_type_none()

   
   Set no ray file generation.





   :Returns:

       :obj:`ansys.speos.core.sensor.Sensor3DIrradiance`
           3D Irradiance sensor











   ..
       !! processed by numpydoc !!

.. py:method:: set_ray_file_type_classic()

   
   Set ray file generation without polarization data.





   :Returns:

       :obj:`ansys.speos.core.sensor.Sensor3DIrradiance`
           3D Irradiance sensor











   ..
       !! processed by numpydoc !!

.. py:method:: set_ray_file_type_polarization()

   
   Set ray file generation with the polarization data for each ray.





   :Returns:

       :obj:`ansys.speos.core.sensor.Sensor3DIrradiance`
           3D Irradiance sensor











   ..
       !! processed by numpydoc !!

.. py:method:: set_ray_file_type_tm25()

   
   Set ray file generation: a .tm25ray file with polarization data for each ray.





   :Returns:

       :obj:`ansys.speos.core.sensor.Sensor3DIrradiance`
           3D Irradiance sensor











   ..
       !! processed by numpydoc !!

.. py:method:: set_ray_file_type_tm25_no_polarization()

   
   Set ray file generation: a .tm25ray file without polarization data.





   :Returns:

       :obj:`ansys.speos.core.sensor.Sensor3DIrradiance`
           3D Irradiance sensor











   ..
       !! processed by numpydoc !!

.. py:method:: set_layer_type_none()

   
   Define layer separation type as None.





   :Returns:

       :obj:`ansys.speos.core.sensor.Sensor3DIrradiance`
           3D Irradiance sensor











   ..
       !! processed by numpydoc !!

.. py:method:: set_layer_type_source()

   
   Define layer separation as by source.





   :Returns:

       :obj:`ansys.speos.core.sensor.Sensor3DIrradiance`
           3D Irradiance sensor











   ..
       !! processed by numpydoc !!

.. py:method:: set_geometries(geometries)

   
   Select geometry faces to be defined with 3D irradiance sensor.


   :Parameters:

       **geometries** : :obj:`List`\[:obj:`ansys.speos.core.geo_ref.GeoRef`]
           List of geometries that will be considered as output faces.



   :Returns:

       :obj:`ansys.speos.core.sensor.Sensor3DIrradiance`
           3D Irradiance sensor











   ..
       !! processed by numpydoc !!






Classes
-------

.. autoapisummary::

    ansys.speos.core.sensor.Sensor3DIrradiance.Radiometric
    ansys.speos.core.sensor.Sensor3DIrradiance.Photometric
    ansys.speos.core.sensor.Sensor3DIrradiance.Measures
    ansys.speos.core.sensor.Sensor3DIrradiance.Colorimetric




