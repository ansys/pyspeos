





:class:`Speos`
==============


.. py:class:: ansys.speos.core.speos.Speos(host = DEFAULT_HOST, port = DEFAULT_PORT, version = DEFAULT_VERSION, channel = None, remote_instance = None, timeout = 60, logging_level = logging.INFO, logging_file = None, speos_install_path = None)

   
   Allows the Speos session (client) to interact with the SpeosRPC server.


   :Parameters:

       **host** : :class:`python:str`, :obj:`optional`
           Host where the server is running.
           By default, ``ansys.speos.core.kernel.client.DEFAULT_HOST``.

       **port** : :obj:`Union`\[:class:`python:str`, :class:`python:int`], :obj:`optional`
           Port number where the server is running.
           By default, ``ansys.speos.core.kernel.client.DEFAULT_PORT``.

       **version** : :class:`python:str`
           The Speos server version to run, in the 3 digits format, such as "242".
           If unspecified, the version will be chosen as
           ``ansys.speos.core.kernel.client.LATEST_VERSION``.

       **channel** : :obj:`~grpc.Channel`, :obj:`optional`
           gRPC channel for server communication.
           By default, ``None``.

       **remote_instance** : :obj:`ansys.platform.instancemanagement.Instance`
           The corresponding remote instance when the Speos Service
           is launched through PyPIM. This instance will be deleted when calling
           :func:`SpeosClient.close <ansys.speos.core.kernel.client.SpeosClient.close >`.

       **timeout** : :obj:`Real`, :obj:`optional`
           Timeout in seconds to achieve the connection.
           By default, 60 seconds.

       **logging_level** : :class:`python:int`, :obj:`optional`
           The logging level to be applied to the client.
           By default, ``INFO``.

       **logging_file** : :obj:`Optional`\[:class:`python:str`, :obj:`Path`]
           The file to output the log, if requested. By default, ``None``.














   ..
       !! processed by numpydoc !!


.. py:currentmodule:: Speos

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~close`
            - Close the channel and deletes all Speos objects from memory.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~client`
            - The ``Speos`` instance client.







Import detail
-------------

.. code-block:: python

    from ansys.speos.core.speos import Speos

Property detail
---------------

.. py:property:: client
   :type: ansys.speos.core.kernel.client.SpeosClient


   
   The ``Speos`` instance client.
















   ..
       !! processed by numpydoc !!




Method detail
-------------

.. py:method:: close()

   
   Close the channel and deletes all Speos objects from memory.





   :Returns:

       :ref:`bool <python:bltin-boolean-values>`
           Information if the server instance was terminated.








   .. rubric:: Notes

   If an instance of the Speos Service was started using
   PyPIM, this instance will be deleted.



   ..
       !! processed by numpydoc !!




